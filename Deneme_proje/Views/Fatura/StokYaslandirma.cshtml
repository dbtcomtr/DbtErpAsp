@model IEnumerable<Deneme_proje.Models.Entities.StockMovement>

@{
    ViewData["Title"] = "Stok Hareketleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var stockCodesAndNames = ViewData["StockCodesAndNames"] as List<SelectListItem>;
    var selectedStockCode = ViewData["SelectedStockCode"] as string;
    var hasFilterApplied = !string.IsNullOrEmpty(selectedStockCode);

    // Negatif stok kontrolü
    var hasNegativeStock = Model != null && Model.Any(x => x.IsNegativeStock);
    var positiveStocks = Model?.Where(x => !x.IsNegativeStock).ToList() ?? new List<Deneme_proje.Models.Entities.StockMovement>();
    var negativeStock = Model?.FirstOrDefault(x => x.IsNegativeStock);

    // Değişkenler yuvarlama olmadan kullanılacak (sadece pozitif stoklar için)
    double toplamGirenMiktar = 0;
    double toplamGirenTarih = 0;
    double toplamGirenBrutFiyat = 0;
    double toplamGirenUsdBrutFiyat = 0;
    var enSonGirenStok = positiveStocks.OrderByDescending(x => x.NumericDate).FirstOrDefault();
    double enSonGirenStokBirimTutar = enSonGirenStok != null ? enSonGirenStok.StokTutar / enSonGirenStok.StokMiktar : 0;
    DateTime excelStartDate = new DateTime(1900, 1, 1); // Excel's starting date
}

<link href="~/content/assets/css/bahcepinar.css" rel="stylesheet" />
<style>
    table.dataTable tbody th, table.dataTable tbody td {
        padding: 5px 21px !important;
    }

    @@media only screen and (max-width: 576px) {
        .form-inline .btn {
            margin-top: 0;
        }
    }

    /* Stok arama için özel stil */
    .stok-arama-container {
        position: relative;
        margin-right: 10px;
        min-width: 300px;
    }

    #stokArama {
        width: 100%;
        padding: 8px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }

    #stockCodeList {
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
    }

    .hidden-select {
        display: none;
    }

    /* Negatif stok için özel stiller */
    .negative-stock-alert {
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    .negative-stock-row {
        background-color: #ffe6e6 !important;
        font-weight: bold;
    }

    .negative-stock-icon {
        color: #dc3545;
        font-weight: bold;
        margin-right: 5px;
    }
</style>

<div class="main-content mt-5">
    <div class="px-lg-5 px-3">
        <div class="row">
            <div class="col-sm-12 p-0">
                <div class="main-header">
                    <h4>Stok Yaşlandırma</h4>
                    <ol class="breadcrumb breadcrumb-title breadcrumb-arrow">
                        <li class="breadcrumb-item">
                            <a href="/Home/Index"><i class="icofont icofont-home"></i></a>
                        </li>
                        <li class="breadcrumb-item"><a href="/Fatura/"></a></li>
                        <li class="breadcrumb-item"><a href="/Fatura/">Stok Yaşlandırma</a></li>
                    </ol>
                </div>
            </div>
        </div>

        <div class="row mb-lg-5 mb-1">
            <div class="col-lg-6">
                <form method="get" action="/fatura/StokYaslandirma" class="form-inline">
                    <!-- Stok kodu arama için yeni input ve datalist -->
                    <div class="form-group stok-arama-container">
                        <input type="text" id="stokArama" class="form-control"
                               placeholder="Stok Kodu veya Adını Yazarak Arayın"
                               list="stockCodeList"
                               autocomplete="off"
                               onchange="updateStockCodeSelect(this.value)">

                        <datalist id="stockCodeList">
                            @foreach (var item in stockCodesAndNames)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </datalist>

                        <!-- Gerçek seçim kutusu (gizli) -->
                        @Html.DropDownList("stockCode", stockCodesAndNames, "", new { @class = "hidden-select", id = "stockCodeSelect" })
                    </div>

                    <div class="form-group stok-selcted">
                        @Html.DropDownList("depoNo", ViewData["DepoList"] as List<SelectListItem>, "Tüm Depolar", new { @class = "form-control", id = "depoNo" })
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-tumblr btn-shadow waves-effect waves-light">Ara</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Debug bilgileri (geliştirme aşamasında kullanın) -->
      @*   @if (!string.IsNullOrEmpty(ViewBag.Message as string))
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="alert alert-info">
                        @ViewBag.Message
                        <br>
                        <small>
                            Seçilen Stok: @selectedStockCode <br>
                            Model Count: @(Model?.Count() ?? 0) <br>
                            Has Filter: @hasFilterApplied <br>
                            Has Negative: @hasNegativeStock
                        </small>
                    </div>
                </div>
            </div>
        } *@

        <!-- Negatif stok uyarısı -->
        @if (hasNegativeStock && negativeStock != null)
        {
            <div class="row">
                <div class="col-sm-12">
                    <div class="negative-stock-alert">
                        <strong><i class="fa fa-exclamation-triangle negative-stock-icon"></i>DİKKAT:</strong>
                        Bu stokun depoda negatif miktarı bulunmaktadır!
                        <br>
                        <strong>Stok Kodu:</strong> @negativeStock.MsgS0078
                        <br>
                        <strong>Stok Adı:</strong> @negativeStock.MsgS0870
                        <br>
                        <strong>Negatif Miktar:</strong> @negativeStock.StoktaGirenMiktar.ToString("N2")
                        <br>
                        <strong>Depo:</strong> @negativeStock.DepoAdi
                    </div>
                </div>
            </div>
        }

        <!-- Tablo ve içerik -->
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header" style="background: radial-gradient(circle, rgba(0, 118, 168, 1) 0%, rgba(22, 46, 84, 1) 63%); padding: 10px 20px;">
                        <h5 class="card-header-text text-white">
                            Stok Yaşlandırma
                            @if (hasNegativeStock)
                            {
                                <span class="badge badge-danger ml-2">NEGATİF STOK</span>
                            }
                        </h5>
                    </div>

                    <div class="card-block accordion-block px-0">
                        <div class="col-md-12">
                            <div id="tablesContainer">
                                @if ((hasFilterApplied || ViewData["HasData"] != null) && Model != null && Model.Any())
                                {
                                    <div id="example_wrapper" class="dataTables_wrapper">
                                        <table id="example" class="display dataTable" style="width:100%">
                                            <thead>
                                                <tr>
                                                    <th>Durum</th>
                                                    <th>Stok Kodu</th>
                                                    <th>Adı</th>
                                                    <th>Giren Miktar</th>
                                                    <th>Birim</th>
                                                    <th>Birim Fiyat (TL)</th>
                                                    <th>Döviz Kuru</th>
                                                    <th>USD Birim Fiyat</th>
                                                    <th>Stok Tarihi</th>
                                                    <th>Stok Yaş</th>
                                                    <th>Bulunduğu Depo</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (hasNegativeStock && negativeStock != null)
                                                {
                                                    <tr class="negative-stock-row">
                                                        <td><span class="negative-stock-icon">⚠️</span> NEGATİF</td>
                                                        <td>@negativeStock.MsgS0078</td>
                                                        <td>@negativeStock.MsgS0870</td>
                                                        <td style="text-align: right; color: red;">@negativeStock.StoktaGirenMiktar.ToString("N0")</td>
                                                        <td>@negativeStock.BirimAdi</td>
                                                        <td style="text-align: right;">-</td>
                                                        <td style="text-align: right;">-</td>
                                                        <td style="text-align: right;">-</td>
                                                        <td>@negativeStock.StokTarih.ToString("dd/MM/yyyy")</td>
                                                        <td style="text-align: right;">-</td>
                                                        <td>@negativeStock.DepoAdi</td>
                                                    </tr>
                                                }

                                                @foreach (var item in positiveStocks)
                                                {
                                                    // Birim hesaplamaları (yuvarlama yapılmadan)
                                                    var brüt_birim = item.StokTutar / item.StokMiktar;
                                                    var usd_birim = brüt_birim / item.AltDovizKuru;

                                                    // Parçalanmış giren miktarı kullanarak giren tarih ve brüt fiyat hesaplama
                                                    var giren_tarih = item.StoktaGirenMiktar * item.NumericDate;
                                                    var giren_brütfiyat = item.StoktaGirenMiktar * brüt_birim;
                                                    var giren_brütfiyat_usd = item.StoktaGirenMiktar * usd_birim;

                                                    var bugunuNumericDate1 = (int)(DateTime.Now - excelStartDate.AddDays(-2)).TotalDays;

                                                    // Stok yaşı hesaplama (bugünkü tarihe göre)
                                                    var giren_yas = bugunuNumericDate1 - item.NumericDate;

                                                    // Toplam hesaplamalar (sadece pozitif stoklar için)
                                                    toplamGirenMiktar += item.StoktaGirenMiktar;
                                                    toplamGirenTarih += giren_tarih;
                                                    toplamGirenBrutFiyat += giren_brütfiyat;
                                                    toplamGirenUsdBrutFiyat += giren_brütfiyat_usd;

                                                    <tr>
                                                        <td><span style="color: green;">✓</span> POZİTİF</td>
                                                        <td>@item.MsgS0078</td>
                                                        <td>@item.MsgS0870</td>
                                                        <td style="text-align: right;">@item.StoktaGirenMiktar.ToString("N0")</td>
                                                        <td>@item.BirimAdi</td>
                                                        <td style="text-align: right;">@brüt_birim.ToString("N5")</td>
                                                        <td style="text-align: right;">@item.AltDovizKuru.ToString("N5")</td>
                                                        <td style="text-align: right;">@usd_birim.ToString("N5")</td>
                                                        <td>@item.StokTarih.ToString("dd/MM/yyyy")</td>
                                                        <td style="text-align: right;">@giren_yas.ToString("N0")</td>
                                                        <td>@item.DepoAdi</td>
                                                    </tr>
                                                }
                                            </tbody>
                                            @if (positiveStocks.Any())
                                            {
                                                <tfoot>
                                                    @{
                                                        // Ağırlıklı Ortalama Giriş Tarihi (A.O.G. Tarihi) ve stok yaşı hesaplamaları (sadece pozitif stoklar için)
                                                        var aogt = toplamGirenMiktar > 0 ? toplamGirenTarih / toplamGirenMiktar : 0;
                                                        var finalAogtDate = toplamGirenMiktar > 0 ? excelStartDate.AddDays(aogt - 2) : excelStartDate;
                                                        var bugunuNumericDate = (int)(DateTime.Now - excelStartDate.AddDays(-2)).TotalDays;

                                                        var stokyas = toplamGirenMiktar > 0 ? bugunuNumericDate - aogt : 0;
                                                        var stoktutar_sonsatinalma = toplamGirenMiktar * enSonGirenStokBirimTutar;

                                                        var aobm = toplamGirenMiktar > 0 ? toplamGirenBrutFiyat / toplamGirenMiktar : 0;
                                                        var aobm_usd = toplamGirenMiktar > 0 ? toplamGirenUsdBrutFiyat / toplamGirenMiktar : 0;

                                                        // Yaşlandırma hesaplamaları için değişkenler (sadece pozitif stoklar)
                                                        double yas0_30 = 0, yas31_60 = 0, yas61_90 = 0, yas90_plus = 0;

                                                        foreach (var item in positiveStocks)
                                                        {
                                                            var bugunuNumericDate1 = (int)(DateTime.Now - excelStartDate).TotalDays;
                                                            var giren_yas = bugunuNumericDate1 - item.NumericDate;

                                                            if (giren_yas <= 30)
                                                            {
                                                                yas0_30 += item.StoktaGirenMiktar;
                                                            }
                                                            else if (giren_yas <= 60)
                                                            {
                                                                yas31_60 += item.StoktaGirenMiktar;
                                                            }
                                                            else if (giren_yas <= 90)
                                                            {
                                                                yas61_90 += item.StoktaGirenMiktar;
                                                            }
                                                            else
                                                            {
                                                                yas90_plus += item.StoktaGirenMiktar;
                                                            }
                                                        }
                                                    }
                                                    <div class="table-responsive">
                                                        <table class="table table-bordered table-striped">
                                                            <thead class="thead-dark">
                                                                <tr>
                                                                    <th>Kalan Pozitif Stok Miktarı</th>
                                                                    <th>A.O.G. Tarihi</th>
                                                                    <th>Stok Yaşı</th>
                                                                    <th>Ağırlıkl Ortalama Birim Maliyeti (TL)</th>
                                                                    <th>Ağırlıkl Ortalama Birim Maliyeti (USD)</th>
                                                                    <th>En Son Giren Stoğun Birim Tutarı</th>
                                                                    <th>Stok Tutarı (Son Satın Alma Fiyatı ile TL)</th>
                                                                    <th>StokTutarı Usd</th>
                                                                    <th>0-30 Gün</th>
                                                                    <th>31-60 Gün</th>
                                                                    <th>61-90 Gün</th>
                                                                    <th>90+ Gün</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr>
                                                                    <td style="text-align: right;" id="toplamGirenMiktar">@toplamGirenMiktar.ToString("N0")</td>
                                                                    <td>@finalAogtDate.ToString("dd/MM/yyyy")</td>
                                                                    <td style="text-align: right;">@stokyas.ToString("N0")</td>
                                                                    <td style="text-align: right;">@aobm.ToString("N5")</td>
                                                                    <td style="text-align: right;" id="aobm_usd">@aobm_usd.ToString("N5")</td>
                                                                    <td style="text-align: right;">@enSonGirenStokBirimTutar.ToString("N5")</td>
                                                                    <td style="text-align: right;">@stoktutar_sonsatinalma.ToString("N5")</td>
                                                                    <td style="text-align: right;" id="stok_tutari_usd">Hesaplanıyor...</td>
                                                                    <td style="text-align: right;">@yas0_30.ToString("N0")</td>
                                                                    <td style="text-align: right;">@yas31_60.ToString("N0")</td>
                                                                    <td style="text-align: right;">@yas61_90.ToString("N0")</td>
                                                                    <td style="text-align: right;">@yas90_plus.ToString("N0")</td>
                                                                </tr>
                                                                <tr>
                                                                    <td colspan="12">
                                                                        Döviz Kuru (USD/TL): <span id="usd_exchange_rate">Yükleniyor...</span>
                                                                        @if (hasNegativeStock && negativeStock != null)
                                                                        {
                                                                            <span style="margin-left: 20px; color: #721c24; font-weight: bold;">
                                                                                ⚠️ Bu stokta @negativeStock.StoktaGirenMiktar.ToString("N2") birimlik negatif stok bulunmaktadır!
                                                                            </span>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </tfoot>
                                            }
                                        </table>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>

<script>
    // Arama inputundan seçilen değeri gerçek select'e aktarmak için
    function updateStockCodeSelect(selectedValue) {
        document.getElementById('stockCodeSelect').value = selectedValue;
    }

    $(document).ready(function() {
        // Sayfa yüklenirken seçili stok kodunu inputa yerleştir
        var selectedValue = $("#stockCodeSelect").val();
        if (selectedValue) {
            var selectedText = $("#stockCodeSelect option:selected").text();
            $("#stokArama").val(selectedText);
        }

        // DataTable ve diğer kodlar
        if ($.fn.DataTable) {
            if ($('#example').length) {
                $('#example').DataTable({
                    "dom": '<"row"<"col-sm-12"B>>' +
                        '<"row"<"col-sm-6"l><"col-sm-6"f>>' +
                        't' +
                        '<"row"<"col-sm-6"i><"col-sm-6"p>>',
                    "language": {
                        "url": "/Content/DataTables/turkish.json"
                    },
                    "buttons": ['copy', 'csv', 'excel', 'pdf', 'print'],
                    "pageLength": 5000,
                    "lengthMenu": [[10, 25, 50, 100, 5000], [10, 25, 50, 100, "5000"]]
                });
            }
        }

        // Döviz kuru kodları (sadece pozitif stoklar varsa çalıştır)
    @if (positiveStocks.Any())
    {
        <text>
                fetchExchangeRate();

                function fetchExchangeRate() {
                    tryFrankfurterAPI();
                }

                function tryFrankfurterAPI() {
                    $.ajax({
                        url: "https://api.frankfurter.app/latest?from=USD&to=TRY",
                        type: "GET",
                        dataType: "json",
                        timeout: 5000,
                        success: function(data) {
                            if (data && data.rates && data.rates.TRY) {
                                updateExchangeRate(data.rates.TRY);
                            } else {
                                tryOpenExchangeAPI();
                            }
                        },
                        error: function() {
                            tryOpenExchangeAPI();
                        }
                    });
                }

                function tryOpenExchangeAPI() {
                    $.ajax({
                        url: "https://open.er-api.com/v6/latest/USD",
                        type: "GET",
                        dataType: "json",
                        timeout: 5000,
                        success: function(data) {
                            if (data && data.rates && data.rates.TRY) {
                                updateExchangeRate(data.rates.TRY);
                            } else {
                                tryExchangeRatesAPI();
                            }
                        },
                        error: function() {
                            tryExchangeRatesAPI();
                        }
                    });
                }

                function tryExchangeRatesAPI() {
                    $.ajax({
                        url: "https://api.exchangerate.host/latest?base=USD&symbols=TRY",
                        type: "GET",
                        dataType: "json",
                        timeout: 5000,
                        success: function(data) {
                            if (data && data.rates && data.rates.TRY) {
                                updateExchangeRate(data.rates.TRY);
                            } else {
                                useFallbackRate();
                            }
                        },
                        error: function() {
                            useFallbackRate();
                        }
                    });
                }

                function useFallbackRate() {
                    var fallbackRate = 32.50;
                    updateExchangeRate(fallbackRate, true);
                }

                function updateExchangeRate(rate, isFallback) {
                    // Döviz kurunu 5 basamaklı göster
                    var formattedRate = rate.toFixed(5);
                    if (isFallback) {
                        $("#usd_exchange_rate").text(formattedRate + " (Tahmini değer)");
                    } else {
                        $("#usd_exchange_rate").text(formattedRate);
                    }

                    // Virgülle ayrılmış değerleri doğru şekilde al
                    var aobmUsdText = $("#aobm_usd").text();
                    var toplamGirenMiktarText = $("#toplamGirenMiktar").text();

                    var aobmUsd = parseFloat(aobmUsdText.replace(/\./g, '').replace(',', '.'));
                    var toplamGirenMiktar = parseFloat(toplamGirenMiktarText.replace(/\./g, '').replace(',', '.'));

                    console.log("AOBM USD:", aobmUsd);
                    console.log("Toplam Giren Miktar:", toplamGirenMiktar);
                    console.log("Döviz Kuru:", rate);

                    if (!isNaN(aobmUsd) && !isNaN(toplamGirenMiktar)) {
                        var stokTutariUsd = aobmUsd * toplamGirenMiktar;
                        var stokTutariTl = stokTutariUsd * rate;

                        // Yuvarlamasız, 5 basamaklı gösterim
                        $("#stok_tutari_usd").text(
                            stokTutariUsd.toLocaleString('tr-TR', { minimumFractionDigits: 5, maximumFractionDigits: 5 }) +
                            " USD (" +
                            stokTutariTl.toLocaleString('tr-TR', { minimumFractionDigits: 5, maximumFractionDigits: 5 }) +
                            " TL)"
                        );
                    } else {
                        $("#stok_tutari_usd").text("Hesaplanamadı");
                    }
                }
        </text>
    }
    });
</script>